{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\todolist\\\\src\\\\componentes\\\\list\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport Todo from \"../todo/Todo\";\nimport styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const todolist = useSelector(state => state.todos.todolist);\n  console.log(todolist);\n\n  const lists = () => {\n    return todolist.map(todolists => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: todolists.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todolists.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uCDE8\\uC18C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)]\n      }, todolists.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todolist.map(todolists => {\n      /*#__PURE__*/\n      _jsxDEV(Todo, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: todolists.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todolists.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uCDE8\\uC18C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, todolists.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"me0oUmfmZIT8HuQfdIBAHRcQCBA=\", false, function () {\n  return [useSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Todo","styled","React","useEffect","useNavigate","useSelector","useDispatch","List","todolist","state","todos","console","log","lists","map","todolists","title","content","id"],"sources":["C:/React/todolist/src/componentes/list/List.jsx"],"sourcesContent":["import Todo from \"../todo/Todo\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction List() {\r\n  const todolist = useSelector((state) => state.todos.todolist);\r\n  console.log(todolist);\r\n\r\n  const lists = () => {\r\n    return todolist.map((todolists) => {\r\n      <div key={todolists.id}>\r\n        <div>\r\n          <h2>{todolists.title}</h2>\r\n          <span>{todolists.content}</span>\r\n        </div>\r\n        <button>삭제하기</button>\r\n        <button>취소 </button>\r\n      </div>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todolist.map((todolists) => {\r\n        <Todo key={todolists.id}>\r\n          <div>\r\n            <h2>{todolists.title}</h2>\r\n            <span>{todolists.content}</span>\r\n          </div>\r\n          <button>삭제하기</button>\r\n          <button>취소 </button>\r\n        </Todo>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,QAAxB,CAA5B;EACAG,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;EAEA,MAAMK,KAAK,GAAG,MAAM;IAClB,OAAOL,QAAQ,CAACM,GAAT,CAAcC,SAAD,IAAe;MACjC;MAAA;QAAA,wBACE;UAAA,wBACE;YAAA,UAAKA,SAAS,CAACC;UAAf;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAOD,SAAS,CAACE;UAAjB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA,GAAUF,SAAS,CAACG,EAApB;QAAA;QAAA;QAAA;MAAA;IAQD,CATM,CAAP;EAUD,CAXD;;EAaA,oBACE;IAAA,UACGV,QAAQ,CAACM,GAAT,CAAcC,SAAD,IAAe;MAC3B;MAAA,QAAC,IAAD;QAAA,wBACE;UAAA,wBACE;YAAA,UAAKA,SAAS,CAACC;UAAf;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAOD,SAAS,CAACE;UAAjB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA,GAAWF,SAAS,CAACG,EAArB;QAAA;QAAA;QAAA;MAAA;IAQD,CATA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA/BQX,I;UACUF,W;;;KADVE,I;AAiCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}