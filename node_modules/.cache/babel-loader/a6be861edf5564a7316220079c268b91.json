{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\todolist\\\\src\\\\componentes\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createTodo } from \"../redux/modules/todos\";\nimport Button from \"./elements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [todo, setTodo] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const {\n    title,\n    content\n  } = todo;\n  console.log(title);\n  console.log(contetn);\n\n  const onChangeHandler = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setTodo({ ...todo,\n      [name]: value\n    });\n  };\n\n  const handleOnKeyPress = e => {\n    if (e.key === \"Enter\") {\n      onClickAddTodoListHandler(); // Enter 입력이 되면 클릭 이벤트 실행\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const onClickAddTodoListHandler = e => {\n    dispatch(createTodo(todo));\n    setTodo({\n      title: \"\",\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormWrap, {\n    children: [/*#__PURE__*/_jsxDEV(InputWrap, {\n      autoFocus: true,\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      onChange: onChangeHandler,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputWrap, {\n      type: \"text\",\n      name: \"content\",\n      value: content,\n      onChange: onChangeHandler,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"100\",\n      onClick: onClickAddTodoListHandler,\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"KksTe+bFGs9ChI71Kg1nRdUVex4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\nconst FormWrap = styled.div`\n  max-width: 1150px;\n  margin: auto;\n  color: #ffffff;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = FormWrap;\nconst InputWrap = styled.input`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  color: #7c009b;\n  width: 300px;\n  height: 35px;\n  background-color: transparent;\n  box-shadow: 0px 0px 3px 0px #7c009b;\n  margin: 10px;\n  padding-left: 10px;\n  &:focus {\n    outline: 1px solid white;\n    box-shadow: 0px 0px 3px 0px white;\n  }\n`;\n_c3 = InputWrap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"FormWrap\");\n$RefreshReg$(_c3, \"InputWrap\");","map":{"version":3,"names":["React","styled","useState","useDispatch","createTodo","Button","Form","todo","setTodo","title","content","console","log","contetn","onChangeHandler","e","value","name","target","handleOnKeyPress","key","onClickAddTodoListHandler","dispatch","FormWrap","div","InputWrap","input"],"sources":["C:/React/todolist/src/componentes/Form.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createTodo } from \"../redux/modules/todos\";\r\nimport Button from \"./elements/Button\";\r\n\r\nconst Form = () => {\r\n  const [todo, setTodo] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const { title, content } = todo;\r\n  console.log(title);\r\n  console.log(contetn);\r\n  const onChangeHandler = (e) => {\r\n    const { value, name } = e.target;\r\n    setTodo({\r\n      ...todo,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleOnKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onClickAddTodoListHandler(); // Enter 입력이 되면 클릭 이벤트 실행\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onClickAddTodoListHandler = (e) => {\r\n    dispatch(createTodo(todo));\r\n    setTodo({\r\n      title: \"\",\r\n      content: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormWrap>\r\n      <InputWrap autoFocus type=\"text\" name=\"title\" value={title} onChange={onChangeHandler} onKeyPress={handleOnKeyPress}></InputWrap>\r\n      <InputWrap type=\"text\" name=\"content\" value={content} onChange={onChangeHandler} onKeyPress={handleOnKeyPress}></InputWrap>\r\n      <Button size=\"100\" onClick={onClickAddTodoListHandler}>\r\n        추가하기\r\n      </Button>\r\n    </FormWrap>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\nconst FormWrap = styled.div`\r\n  max-width: 1150px;\r\n  margin: auto;\r\n  color: #ffffff;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InputWrap = styled.input`\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  color: #7c009b;\r\n  width: 300px;\r\n  height: 35px;\r\n  background-color: transparent;\r\n  box-shadow: 0px 0px 3px 0px #7c009b;\r\n  margin: 10px;\r\n  padding-left: 10px;\r\n  &:focus {\r\n    outline: 1px solid white;\r\n    box-shadow: 0px 0px 3px 0px white;\r\n  }\r\n`;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAC/BO,KAAK,EAAE,EADwB;IAE/BC,OAAO,EAAE;EAFsB,CAAD,CAAhC;EAIA,MAAM;IAAED,KAAF;IAASC;EAAT,IAAqBH,IAA3B;EACAI,OAAO,CAACC,GAAR,CAAYH,KAAZ;EACAE,OAAO,CAACC,GAAR,CAAYC,OAAZ;;EACA,MAAMC,eAAe,GAAIC,CAAD,IAAO;IAC7B,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAkBF,CAAC,CAACG,MAA1B;IACAV,OAAO,CAAC,EACN,GAAGD,IADG;MAEN,CAACU,IAAD,GAAQD;IAFF,CAAD,CAAP;EAID,CAND;;EAQA,MAAMG,gBAAgB,GAAIJ,CAAD,IAAO;IAC9B,IAAIA,CAAC,CAACK,GAAF,KAAU,OAAd,EAAuB;MACrBC,yBAAyB,GADJ,CACQ;IAC9B;EACF,CAJD;;EAMA,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;;EACA,MAAMkB,yBAAyB,GAAIN,CAAD,IAAO;IACvCO,QAAQ,CAAClB,UAAU,CAACG,IAAD,CAAX,CAAR;IACAC,OAAO,CAAC;MACNC,KAAK,EAAE,EADD;MAENC,OAAO,EAAE;IAFH,CAAD,CAAP;EAID,CAND;;EAQA,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,SAAD;MAAW,SAAS,MAApB;MAAqB,IAAI,EAAC,MAA1B;MAAiC,IAAI,EAAC,OAAtC;MAA8C,KAAK,EAAED,KAArD;MAA4D,QAAQ,EAAEK,eAAtE;MAAuF,UAAU,EAAEK;IAAnG;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,IAAI,EAAC,MAAhB;MAAuB,IAAI,EAAC,SAA5B;MAAsC,KAAK,EAAET,OAA7C;MAAsD,QAAQ,EAAEI,eAAhE;MAAiF,UAAU,EAAEK;IAA7F;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,IAAI,EAAC,KAAb;MAAmB,OAAO,EAAEE,yBAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAxCD;;GAAMf,I;UAsBaH,W;;;KAtBbG,I;AA0CN,eAAeA,IAAf;AAEA,MAAMiB,QAAQ,GAAGtB,MAAM,CAACuB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,Q;AAYN,MAAME,SAAS,GAAGxB,MAAM,CAACyB,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,S"},"metadata":{},"sourceType":"module"}