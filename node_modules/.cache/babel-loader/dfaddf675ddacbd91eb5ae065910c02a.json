{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\todolist\\\\src\\\\componentes\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createTodo } from \"../redux/modules/todos\";\nimport Button from \"./elements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [todo, setTodo] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const {\n    title,\n    content\n  } = todo;\n\n  const onChangeHandler = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setTodo({ ...todo,\n      //덮어씌우기 위해서 먼저 펼친다.\n      [name]: value //[   ] 동적할당, 두개 이상 각각 할당 되도록 < name :   / value :\n\n    });\n  };\n\n  const handleOnKeyPress = e => {\n    if (e.key === \"Enter\") {\n      onClickCreateTodoListHandler();\n    }\n  };\n\n  const onClickCreateTodoListHandler = () => {\n    if (title === \"\") {\n      return;\n    }\n\n    dispatch(createTodo(todo));\n    setTodo({\n      title: \"\",\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormWrapDiv, {\n    children: [/*#__PURE__*/_jsxDEV(InputWrap, {\n      autoFocus: true,\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      onChange: onChangeHandler,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputWrap, {\n      type: \"text\",\n      name: \"content\",\n      value: content,\n      onChange: onChangeHandler,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"100\",\n      onClick: onClickCreateTodoListHandler,\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"vYjmHmb3v5VAV4Nf8qeK2Y6wljE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\nconst FormWrapDiv = styled.div`\n  max-width: 1150px;\n  margin: auto;\n  color: #ffffff;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = FormWrapDiv;\nconst InputWrap = styled.input`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  color: #7c009b;\n  width: 300px;\n  height: 35px;\n  background-color: transparent;\n  box-shadow: 0px 0px 3px 0px #7c009b;\n  margin: 10px;\n  padding-left: 10px;\n  &:focus {\n    outline: 1px solid white;\n    box-shadow: 0px 0px 3px 0px white;\n  }\n`;\n_c3 = InputWrap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"FormWrapDiv\");\n$RefreshReg$(_c3, \"InputWrap\");","map":{"version":3,"names":["React","styled","useState","useDispatch","createTodo","Button","Form","dispatch","todo","setTodo","title","content","onChangeHandler","e","value","name","target","handleOnKeyPress","key","onClickCreateTodoListHandler","FormWrapDiv","div","InputWrap","input"],"sources":["C:/React/todolist/src/componentes/Form.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createTodo } from \"../redux/modules/todos\";\r\nimport Button from \"./elements/Button\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n  const [todo, setTodo] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const { title, content } = todo;\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { value, name } = e.target;\r\n    setTodo({\r\n      ...todo, //덮어씌우기 위해서 먼저 펼친다.\r\n      [name]: value, //[   ] 동적할당, 두개 이상 각각 할당 되도록 < name :   / value :\r\n    });\r\n  };\r\n\r\n  const handleOnKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onClickCreateTodoListHandler();\r\n    }\r\n  };\r\n\r\n  const onClickCreateTodoListHandler = () => {\r\n    if (title === \"\") {\r\n      return;\r\n    }\r\n    dispatch(createTodo(todo));\r\n    setTodo({\r\n      title: \"\",\r\n      content: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormWrapDiv>\r\n      <InputWrap autoFocus type=\"text\" name=\"title\" value={title} onChange={onChangeHandler} onKeyPress={handleOnKeyPress}></InputWrap>\r\n      <InputWrap type=\"text\" name=\"content\" value={content} onChange={onChangeHandler} onKeyPress={handleOnKeyPress}></InputWrap>\r\n      <Button size=\"100\" onClick={onClickCreateTodoListHandler}>\r\n        추가하기\r\n      </Button>\r\n    </FormWrapDiv>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\nconst FormWrapDiv = styled.div`\r\n  max-width: 1150px;\r\n  margin: auto;\r\n  color: #ffffff;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst InputWrap = styled.input`\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  color: #7c009b;\r\n  width: 300px;\r\n  height: 35px;\r\n  background-color: transparent;\r\n  box-shadow: 0px 0px 3px 0px #7c009b;\r\n  margin: 10px;\r\n  padding-left: 10px;\r\n  &:focus {\r\n    outline: 1px solid white;\r\n    box-shadow: 0px 0px 3px 0px white;\r\n  }\r\n`;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAC/BQ,KAAK,EAAE,EADwB;IAE/BC,OAAO,EAAE;EAFsB,CAAD,CAAhC;EAKA,MAAM;IAAED,KAAF;IAASC;EAAT,IAAqBH,IAA3B;;EAEA,MAAMI,eAAe,GAAIC,CAAD,IAAO;IAC7B,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAkBF,CAAC,CAACG,MAA1B;IACAP,OAAO,CAAC,EACN,GAAGD,IADG;MACG;MACT,CAACO,IAAD,GAAQD,KAFF,CAES;;IAFT,CAAD,CAAP;EAID,CAND;;EAQA,MAAMG,gBAAgB,GAAIJ,CAAD,IAAO;IAC9B,IAAIA,CAAC,CAACK,GAAF,KAAU,OAAd,EAAuB;MACrBC,4BAA4B;IAC7B;EACF,CAJD;;EAMA,MAAMA,4BAA4B,GAAG,MAAM;IACzC,IAAIT,KAAK,KAAK,EAAd,EAAkB;MAChB;IACD;;IACDH,QAAQ,CAACH,UAAU,CAACI,IAAD,CAAX,CAAR;IACAC,OAAO,CAAC;MACNC,KAAK,EAAE,EADD;MAENC,OAAO,EAAE;IAFH,CAAD,CAAP;EAID,CATD;;EAWA,oBACE,QAAC,WAAD;IAAA,wBACE,QAAC,SAAD;MAAW,SAAS,MAApB;MAAqB,IAAI,EAAC,MAA1B;MAAiC,IAAI,EAAC,OAAtC;MAA8C,KAAK,EAAED,KAArD;MAA4D,QAAQ,EAAEE,eAAtE;MAAuF,UAAU,EAAEK;IAAnG;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,IAAI,EAAC,MAAhB;MAAuB,IAAI,EAAC,SAA5B;MAAsC,KAAK,EAAEN,OAA7C;MAAsD,QAAQ,EAAEC,eAAhE;MAAiF,UAAU,EAAEK;IAA7F;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,IAAI,EAAC,KAAb;MAAmB,OAAO,EAAEE,4BAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA3CD;;GAAMb,I;UACaH,W;;;KADbG,I;AA6CN,eAAeA,IAAf;AAEA,MAAMc,WAAW,GAAGnB,MAAM,CAACoB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,W;AAYN,MAAME,SAAS,GAAGrB,MAAM,CAACsB,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,S"},"metadata":{},"sourceType":"module"}