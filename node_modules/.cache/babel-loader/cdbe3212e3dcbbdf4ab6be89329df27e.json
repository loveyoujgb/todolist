{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\todolist\\\\src\\\\componentes\\\\form\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createTodo } from \"../../redux/modules/todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormWrap = styled.div`\n  max-width: 1150px;\n  margin: auto;\n`;\n_c = FormWrap;\nconst InputWrap = styled.input`\n  width: 120px;\n  height: 35px;\n`;\n_c2 = InputWrap;\nconst ButtonWrap = styled.button`\n  font-weight: bold;\n  color: #ffffff;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  background-color: transparent;\n  width: 120px;\n  height: 35px;\n  cursor: pointer;\n  box-shadow: 0px 0px 3px 0px #7c009b;\n`;\n_c3 = ButtonWrap;\n\nconst Form = () => {\n  _s();\n\n  const [todo, setTodo] = useState({\n    // id: Date.now(),\n    title: \"\",\n    content: \"\" // done: false,\n\n  });\n  const {\n    title,\n    content\n  } = todo;\n\n  const onChangeHandler = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setTodo({ ...todo,\n      [name]: value\n    });\n  }; //액션 객체 보낼 함수\n\n\n  const dispatch = useDispatch();\n\n  const onClickAddTodoListHandler = () => {\n    dispatch(createTodo(todo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputWrap, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWrap, {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWrap, {\n        onClick: onClickAddTodoListHandler,\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"YCB9+EMREdq8SDFcedVyAX9Ply8=\", false, function () {\n  return [useDispatch];\n});\n\n_c4 = Form;\nexport default Form;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FormWrap\");\n$RefreshReg$(_c2, \"InputWrap\");\n$RefreshReg$(_c3, \"ButtonWrap\");\n$RefreshReg$(_c4, \"Form\");","map":{"version":3,"names":["React","styled","useState","useSelector","useDispatch","createTodo","FormWrap","div","InputWrap","input","ButtonWrap","button","Form","todo","setTodo","title","content","onChangeHandler","e","value","name","target","dispatch","onClickAddTodoListHandler"],"sources":["C:/React/todolist/src/componentes/form/Form.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { createTodo } from \"../../redux/modules/todos\";\r\n\r\nconst FormWrap = styled.div`\r\n  max-width: 1150px;\r\n  margin: auto;\r\n`;\r\nconst InputWrap = styled.input`\r\n  width: 120px;\r\n  height: 35px;\r\n`;\r\nconst ButtonWrap = styled.button`\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  background-color: transparent;\r\n  width: 120px;\r\n  height: 35px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 0px 3px 0px #7c009b;\r\n`;\r\n\r\nconst Form = () => {\r\n  const [todo, setTodo] = useState({\r\n    // id: Date.now(),\r\n    title: \"\",\r\n    content: \"\",\r\n    // done: false,\r\n  });\r\n  const { title, content } = todo;\r\n  const onChangeHandler = (e) => {\r\n    const { value, name } = e.target;\r\n    setTodo({\r\n      ...todo,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //액션 객체 보낼 함수\r\n  const dispatch = useDispatch();\r\n  const onClickAddTodoListHandler = () => {\r\n    dispatch(createTodo(todo));\r\n  };\r\n\r\n  return (\r\n    <FormWrap>\r\n      <div>\r\n        <InputWrap type=\"text\" name=\"title\" value={title} onChange={onChangeHandler}></InputWrap>\r\n        <InputWrap type=\"text\" name=\"content\" value={content} onChange={onChangeHandler}></InputWrap>\r\n        <ButtonWrap onClick={onClickAddTodoListHandler}>추가하기</ButtonWrap>\r\n      </div>\r\n    </FormWrap>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,QAA2B,2BAA3B;;AAEA,MAAMC,QAAQ,GAAGL,MAAM,CAACM,GAAI;AAC5B;AACA;AACA,CAHA;KAAMD,Q;AAIN,MAAME,SAAS,GAAGP,MAAM,CAACQ,KAAM;AAC/B;AACA;AACA,CAHA;MAAMD,S;AAIN,MAAME,UAAU,GAAGT,MAAM,CAACU,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,U;;AAYN,MAAME,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;IAC/B;IACAa,KAAK,EAAE,EAFwB;IAG/BC,OAAO,EAAE,EAHsB,CAI/B;;EAJ+B,CAAD,CAAhC;EAMA,MAAM;IAAED,KAAF;IAASC;EAAT,IAAqBH,IAA3B;;EACA,MAAMI,eAAe,GAAIC,CAAD,IAAO;IAC7B,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAkBF,CAAC,CAACG,MAA1B;IACAP,OAAO,CAAC,EACN,GAAGD,IADG;MAEN,CAACO,IAAD,GAAQD;IAFF,CAAD,CAAP;EAID,CAND,CARiB,CAgBjB;;;EACA,MAAMG,QAAQ,GAAGlB,WAAW,EAA5B;;EACA,MAAMmB,yBAAyB,GAAG,MAAM;IACtCD,QAAQ,CAACjB,UAAU,CAACQ,IAAD,CAAX,CAAR;EACD,CAFD;;EAIA,oBACE,QAAC,QAAD;IAAA,uBACE;MAAA,wBACE,QAAC,SAAD;QAAW,IAAI,EAAC,MAAhB;QAAuB,IAAI,EAAC,OAA5B;QAAoC,KAAK,EAAEE,KAA3C;QAAkD,QAAQ,EAAEE;MAA5D;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD;QAAW,IAAI,EAAC,MAAhB;QAAuB,IAAI,EAAC,SAA5B;QAAsC,KAAK,EAAED,OAA7C;QAAsD,QAAQ,EAAEC;MAAhE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,UAAD;QAAY,OAAO,EAAEM,yBAArB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA/BD;;GAAMX,I;UAiBaR,W;;;MAjBbQ,I;AAiCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}