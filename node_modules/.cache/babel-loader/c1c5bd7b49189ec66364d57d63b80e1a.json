{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\todolist\\\\src\\\\componentes\\\\todo\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteTodo, updateTodo } from \"../../redux/modules/todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoBox = styled.div`\n  max-width: 400px;\n  /* background-color: white; */\n  /* background: linear-gradient(45deg, rgb(97, 241, 252), rgb(251, 141, 255)); */\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #7c009b;\n  border-radius: 10px;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c = TodoBox;\nconst TodoFirstLine = styled.div`\n  flex-direction: row;\n  flex-wrap: wrap;\n  display: flex;\n`;\n_c2 = TodoFirstLine;\nconst ButtonStyle = styled.button`\n  font-weight: bold;\n  margin: 10px;\n  color: #7c009b;\n  box-shadow: 0px 0px 3px 0px;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  background-color: transparent;\n  width: 90px;\n  height: 35px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  &:hover {\n    color: white;\n  }\n`;\n_c3 = ButtonStyle;\nconst TodoListTextWrap = styled.div`\n  color: #7c009b;\n`;\n_c4 = TodoListTextWrap;\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todolist\n  } = _ref;\n  console.log(todolist);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const todolists = useSelector(state => state.todos);\n  return /*#__PURE__*/_jsxDEV(TodoBox, {\n    children: [/*#__PURE__*/_jsxDEV(TodoListTextWrap, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: todolist.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: todolist.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoFirstLine, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonStyle, {\n        onClick: () => {\n          navigate(`/${todolist.id}`);\n        },\n        children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        onClick: () => dispatch(updateTodo(todolist)),\n        children: todolist.done === false ? \"완료\" : \"취소\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        onClick: () => dispatch(deleteTodo(todolist.id)),\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"6RrHJipWxukN7Wv5OLix70bRvhg=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c5 = Todo;\nexport default Todo;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TodoBox\");\n$RefreshReg$(_c2, \"TodoFirstLine\");\n$RefreshReg$(_c3, \"ButtonStyle\");\n$RefreshReg$(_c4, \"TodoListTextWrap\");\n$RefreshReg$(_c5, \"Todo\");","map":{"version":3,"names":["styled","React","useEffect","useNavigate","useSelector","useDispatch","deleteTodo","updateTodo","TodoBox","div","TodoFirstLine","ButtonStyle","button","TodoListTextWrap","Todo","todolist","console","log","navigate","dispatch","todolists","state","todos","title","content","id","done"],"sources":["C:/React/todolist/src/componentes/todo/Todo.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { deleteTodo, updateTodo } from \"../../redux/modules/todos\";\r\n\r\nconst TodoBox = styled.div`\r\n  max-width: 400px;\r\n  /* background-color: white; */\r\n  /* background: linear-gradient(45deg, rgb(97, 241, 252), rgb(251, 141, 255)); */\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #7c009b;\r\n  border-radius: 10px;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TodoFirstLine = styled.div`\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n`;\r\nconst ButtonStyle = styled.button`\r\n  font-weight: bold;\r\n  margin: 10px;\r\n  color: #7c009b;\r\n  box-shadow: 0px 0px 3px 0px;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n  background-color: transparent;\r\n  width: 90px;\r\n  height: 35px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\nconst TodoListTextWrap = styled.div`\r\n  color: #7c009b;\r\n`;\r\n\r\nconst Todo = ({ todolist }) => {\r\n  console.log(todolist);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const todolists = useSelector((state) => state.todos);\r\n  return (\r\n    <TodoBox>\r\n      <TodoListTextWrap>\r\n        <h2>{todolist.title}</h2>\r\n        <span>{todolist.content}</span>\r\n      </TodoListTextWrap>\r\n      <TodoFirstLine>\r\n        <ButtonStyle\r\n          onClick={() => {\r\n            navigate(`/${todolist.id}`);\r\n          }}\r\n        >\r\n          상세보기\r\n        </ButtonStyle>\r\n        <ButtonStyle onClick={() => dispatch(updateTodo(todolist))}>{todolist.done === false ? \"완료\" : \"취소\"}</ButtonStyle>\r\n        <ButtonStyle onClick={() => dispatch(deleteTodo(todolist.id))}>삭제하기</ButtonStyle>\r\n      </TodoFirstLine>\r\n    </TodoBox>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,2BAAvC;;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMD,O;AAgBN,MAAME,aAAa,GAAGV,MAAM,CAACS,GAAI;AACjC;AACA;AACA;AACA,CAJA;MAAMC,a;AAKN,MAAMC,WAAW,GAAGX,MAAM,CAACY,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMD,W;AAkBN,MAAME,gBAAgB,GAAGb,MAAM,CAACS,GAAI;AACpC;AACA,CAFA;MAAMI,gB;;AAIN,MAAMC,IAAI,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC7BC,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,MAAMG,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAMgB,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,SAAS,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA7B;EACA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,gBAAD;MAAA,wBACE;QAAA,UAAKP,QAAQ,CAACQ;MAAd;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAOR,QAAQ,CAACS;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,aAAD;MAAA,wBACE,QAAC,WAAD;QACE,OAAO,EAAE,MAAM;UACbN,QAAQ,CAAE,IAAGH,QAAQ,CAACU,EAAG,EAAjB,CAAR;QACD,CAHH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,WAAD;QAAa,OAAO,EAAE,MAAMN,QAAQ,CAACZ,UAAU,CAACQ,QAAD,CAAX,CAApC;QAAA,UAA6DA,QAAQ,CAACW,IAAT,KAAkB,KAAlB,GAA0B,IAA1B,GAAiC;MAA9F;QAAA;QAAA;QAAA;MAAA,QARF,eASE,QAAC,WAAD;QAAa,OAAO,EAAE,MAAMP,QAAQ,CAACb,UAAU,CAACS,QAAQ,CAACU,EAAV,CAAX,CAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAxBD;;GAAMX,I;UAEaX,W,EACAE,W,EACCD,W;;;MAJdU,I;AA0BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}